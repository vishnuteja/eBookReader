
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.parser.PdfTextExtractor;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.channels.FileChannel;
import java.util.HashMap;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * shelf.java
 *
 * Created on Jan 5, 2012, 11:03:58 AM
 */
/**
 *
 * @author 1211A051-PC
 */
public class shelf extends javax.swing.JFrame {

    /** Creates new form shelf */
    public shelf() {
        initComponents();
        try
	  {
		  String strDirectoy =".\\store"; //Name of the folder to be created
		  
		  boolean success = (new File(strDirectoy)).mkdir();
		 
		  if (success) 
			  System.out.println("Directory: "+ strDirectoy + " created");
		  else
			  System.out.println("Folder Already exists");
	  }
	  
	  catch (Exception e)
	  {
	   System.err.println("Error: " + e.getMessage());
	  }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jButton1.setText("read");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        ta.setColumns(20);
        ta.setEditable(false);
        ta.setRows(5);
        jScrollPane1.setViewportView(ta);

        jButton4.setText("=");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("#");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 867, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton4))
                .addGap(44, 44, 44)
                .addComponent(jButton1)
                .addGap(35, 35, 35)
                .addComponent(jButton2)
                .addGap(40, 40, 40)
                .addComponent(jButton3)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    ta.setText("");
    JFileChooser fc1 = new JFileChooser();
   // fc.setDialogTitle("Choose a file");    
    fc1.setVisible(true);
    int retval1=fc1.showOpenDialog(this);
    if (retval1 == JFileChooser.APPROVE_OPTION) {
        String str1=fc1.getSelectedFile().getAbsolutePath();
        ta.setText(str1);
        File fil2=fc1.getSelectedFile();
        PdfReader pdfr=null; 
        String str3=null;
        try {
                pdfr=new PdfReader(fil2.toString());
            
                str3=PdfTextExtractor.getTextFromPage(pdfr, 22);
        }
            catch (IOException ex) {
                Logger.getLogger(shelf.class.getName()).log(Level.SEVERE, null, ex);
            }
            ta.setText(str3);
    }
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here:
  ta.setText("");
    JFileChooser fc1 = new JFileChooser();
   // fc.setDialogTitle("Choose a file");    
    fc1.setVisible(true);
    int retval1=fc1.showOpenDialog(this);
    if (retval1 == JFileChooser.APPROVE_OPTION) {
        String str1=fc1.getSelectedFile().getAbsolutePath();
        ta.setText(str1);
        File fil1=fc1.getSelectedFile();
        boolean success= fil1.delete();
        if(!success)
        {
            System.out.println("del failed");
            ta.setText("deletion failed");
        }
        else
        {
            System.out.print("del success");
            ta.setText("deletion succesful");
        }
    }
}//GEN-LAST:event_jButton3ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
    ta.setText("");
    JFileChooser fc = new JFileChooser();
   // fc.setDialogTitle("Choose a file");    
    fc.setVisible(true);
    int retval=fc.showOpenDialog(this);
    
    if (retval == JFileChooser.APPROVE_OPTION) {
        String str=fc.getSelectedFile().getName();
        File sourceFile= fc.getSelectedFile();
        File destFile= new File(".\\store\\"+str);
        if (!sourceFile.exists())
        {
                return;
        }
        
        if (!destFile.exists())
        {
                try {
                    destFile.createNewFile();
                    ta.setText("Book added successfully");
                } catch (IOException ex) {
                    Logger.getLogger(shelf.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        else
        {
            System.out.println("File already exist\n");
            ta.setText("File already exists\n");
        }
        
        FileChannel source = null;
        FileChannel destination = null;
            try {
                source = new FileInputStream(sourceFile).getChannel();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(shelf.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                destination = new FileOutputStream(destFile).getChannel();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(shelf.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        if (destination != null && source != null)
        {
                try {
                    destination.transferFrom(source, 0, source.size());
                } catch (IOException ex) {
                    Logger.getLogger(shelf.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        
        if (source != null)
        {
                try {
                    source.close();
                } catch (IOException ex) {
                    Logger.getLogger(shelf.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        
        if (destination != null)
        {
                try {
                    destination.close();
                } catch (IOException ex) {
                    Logger.getLogger(shelf.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }
    
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// TODO add your handling code here:
   ta.setText(""+"\t\t Title \t\t"+"\t\t\t Author \t\t\n");
   ta.append("\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n");
   
    try
        {
            
            File dir =  new File(".\\store");
            File[] file =  dir.listFiles();
            String files;
            for(int i=0;i<file.length;i++)
            {
                files = file[i].getName();
                System.out.println("files are"+files);
                if (files.endsWith(".PDF") || files.endsWith(".pdf"))
                {
                   System.out.println("default"+files);
                   
                 try
                 {
                  PdfReader ReadInputPDF;
            
                  ReadInputPDF = new PdfReader(files);
                  HashMap hMap = new HashMap();
                  hMap=ReadInputPDF.getInfo();
                  Iterator iterator = hMap.keySet().iterator();
                  String athr=null;
                  
                  while (iterator.hasNext())
                  {
                          String key = (String) iterator.next();
                          
                          if(key.equals("Title"))
                          {
                          System.out.println(key + ":" + hMap.get(key));
                          ta.append(hMap.get(key)+"\t"+athr+"\n");
                          }
                          
                          if(key.equals("Author"))
                          {
                          System.out.println(key + ":" + hMap.get(key));
                            // ta.append(hMap.get(key)+"\n");
                          athr=hMap.get(key).toString();
                          }                 
          }
       }
         
        catch (Exception ae)
        {
            System.out.println(ae);
         
        }
                   
                   
                }
            }
        }

        catch(Exception e)
        {
			System.out.println(e.getMessage());
        }
}//GEN-LAST:event_jButton4ActionPerformed

private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
// TODO add your handling code here:
    ta.setText("");
    try
        {
            File dir =  new File(".\\store");
            File[] file =  dir.listFiles();
            String files;
            int count=0;
            for(int i=0;i<file.length;i++)
            {
                files = file[i].getName();
                if (files.endsWith(".PDF") || files.endsWith(".pdf"))
                {
                   System.out.println(files);
                   if(count<2)
                   ta.append(files+"\t");
                   else
                   {
                   ta.append(files+"\n\n");
                   count=-1;
                   }
                       
                   count++;
                }
                
            }
        }

        catch(Exception e)
        {
			System.out.println(e.getMessage());
        }
}//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(shelf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(shelf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(shelf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(shelf.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new shelf().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea ta;
    // End of variables declaration//GEN-END:variables
}
